name: Go

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Get dependencies
        run: |
          SWAGGER_VERSION=v0.23.0
          mkdir -p $HOME/bin
          curl -Lo $HOME/bin/swagger https://github.com/go-swagger/go-swagger/releases/download/${SWAGGER_VERSION}/swagger_linux_amd64 \
            && chmod +x $HOME/bin/swagger
          echo "::add-path::$HOME/bin"
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: npm install swagger-merger -g

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - run: make generate

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build
        run: |
          package_name=terraform-provider-harbor
          platforms=(
          "darwin/amd64"
          "linux/amd64"
          "windows/amd64" )
          for platform in "${platforms[@]}"
          do
              platform_split=(${platform//\// })
              GOOS=${platform_split[0]}
              GOARCH=${platform_split[1]}
              output_name=$package_name
              if [ $GOOS = "windows" ]; then
                  output_name+='.exe'
              fi
              env CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -o bin/$output_name
              zip -v bin/terraform-provider-harbor-$GOOS-$GOARCH bin/$output_name
              rm $output_name
          done

      - name: Test
        run: go test -v .
      - name: Upload Binaryies for publishing
        uses: actions/upload-artifact@v1
        with:
          name: bin
          path: bin/*
